name: Deploy to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma Client
      run: npx prisma generate
      env:
        # Use a dummy URL for client generation only
        DATABASE_URL: "postgresql://dummy:dummy@localhost:5432/dummy?sslmode=require"
    
    - name: Build Next.js application
      run: npm run build
      env:
        # Use dummy DATABASE_URL for build - actual connection not needed for build
        DATABASE_URL: "postgresql://dummy:dummy@localhost:5432/dummy?sslmode=require"
        TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
        TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
        TWILIO_PHONE_NUMBER: ${{ secrets.TWILIO_PHONE_NUMBER }}
        NEXT_PUBLIC_APP_NAME: ${{ secrets.NEXT_PUBLIC_APP_NAME }}
        NEXT_PUBLIC_APP_URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net
        MESSAGING_MODE: ${{ secrets.MESSAGING_MODE }}
    
    - name: Create deployment package
      run: |
        # Create a clean deployment directory
        mkdir -p deploy
        
        # Copy essential files and directories for production
        cp package.json deploy/
        cp package-lock.json deploy/
        cp next.config.ts deploy/
        cp startup.sh deploy/
        cp -r .next deploy/
        cp -r public deploy/
        cp -r prisma deploy/
        cp -r scripts deploy/
        cp -r src deploy/
        
        # Copy any additional config files
        cp tsconfig.json deploy/ || true
        cp next-env.d.ts deploy/ || true
        
        # Install only production dependencies plus tsx for admin creation
        cd deploy
        npm ci --only=production --ignore-scripts
        npm install tsx --save-dev
        
        # Regenerate Prisma client in deployment directory
        npx prisma generate
        
        # Setup Azure PostgreSQL connection during deployment
        # Database operations will be handled by Azure App Service with configured DATABASE_URL
        
        echo "Database setup will be handled by Azure App Service environment variables"
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ./deploy
    
    - name: Configure App Settings in Azure
      run: |
        # Configure basic app settings
        az webapp config appsettings set \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --settings \
          TWILIO_ACCOUNT_SID="${{ secrets.TWILIO_ACCOUNT_SID }}" \
          TWILIO_AUTH_TOKEN="${{ secrets.TWILIO_AUTH_TOKEN }}" \
          TWILIO_PHONE_NUMBER="${{ secrets.TWILIO_PHONE_NUMBER }}" \
          NEXT_PUBLIC_APP_NAME="${{ secrets.NEXT_PUBLIC_APP_NAME }}" \
          NEXT_PUBLIC_APP_URL="https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net" \
          MESSAGING_MODE="${{ secrets.MESSAGING_MODE }}" \
          NODE_ENV="production" \
          SCM_DO_BUILD_DURING_DEPLOYMENT="false" \
          WEBSITE_NODE_DEFAULT_VERSION="20.x"
        
        # Configure DATABASE_URL if secret exists
        if [ ! -z "${{ secrets.DATABASE_URL }}" ]; then
          az webapp config appsettings set \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --settings \
            DATABASE_URL="${{ secrets.DATABASE_URL }}"
        else
          echo "⚠️ DATABASE_URL secret not configured. Please set it manually in Azure Portal."
        fi
    
    - name: Set startup command for Azure
      run: |
        az webapp config set \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --startup-file "./startup.sh"
